services:
  # Traefik reverse proxy with Let's Encrypt for development
  traefik-dev:
    image: docker.io/traefik:v3.0
    container_name: dora-traefik-dev
    restart: unless-stopped
    ports:
      - "8081:80"   # Different port to avoid conflicts
      - "8443:443"  # Different port to avoid conflicts
      - "8082:8080" # Traefik dashboard on different port
    volumes:
      - /run/user/1000/podman/podman.sock:/var/run/docker.sock:ro
      - ./traefik-data-dev:/data
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=g.evstratov@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
    networks:
      - dora-network-dev
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.traefik-dev.rule=Host(`dev.dora.bezalel.tech`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik-dev.tls=true"
      - "traefik.http.routers.traefik-dev.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-dev.service=api@internal"
      # HTTP to HTTPS redirect
      - "traefik.http.middlewares.redirect-to-https-dev.redirectscheme.scheme=https"
      - "traefik.http.routers.redirect-https-dev.rule=Host(`dev.dora.bezalel.tech`)"
      - "traefik.http.routers.redirect-https-dev.entrypoints=web"
      - "traefik.http.routers.redirect-https-dev.middlewares=redirect-to-https-dev"

  # HTTP Server for development
  http-server-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dora-http-server-dev
    env_file:
      - .env
    environment:
      - MEMORY_CACHE_ENABLED=true
      - MEMORY_CACHE_PATH=/app/cache/dora_memory_dev.db
      - MEMORY_CACHE_TTL_DAYS=7
      - MEMORY_CACHE_MAX_SIZE_MB=100
      - LOG_LEVEL=DEBUG  # More verbose logging for dev
      - ENABLE_TRACING=true
      - HTTP_ENABLED=true
      - HTTP_HOST=0.0.0.0
      - HTTP_PORT=8000
    volumes:
      - ./cache:/app/cache
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - dora-network-dev
    expose:
      - "8000"
    command: ["uv", "run", "python", "run_http_server.py"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dora-api-dev.rule=Host(`dev.dora.bezalel.tech`)"
      - "traefik.http.routers.dora-api-dev.tls=true"
      - "traefik.http.routers.dora-api-dev.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dora-api-dev.entrypoints=websecure"
      - "traefik.http.services.dora-api-dev.loadbalancer.server.port=8000"
      # Basic auth middleware for /v1/chat/completions endpoint
      - "traefik.http.middlewares.dora-auth-dev.basicauth.users=admin:$$2b$$12$$5riNOzrVSUhIo/SvAaJSM.8gtkgbEJzfKoe3K.0L3dLNKiNuT4P42"
      - "traefik.http.routers.dora-api-chat-dev.rule=Host(`dev.dora.bezalel.tech`) && PathPrefix(`/v1/chat/completions`)"
      - "traefik.http.routers.dora-api-chat-dev.tls=true"
      - "traefik.http.routers.dora-api-chat-dev.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dora-api-chat-dev.entrypoints=websecure"
      - "traefik.http.routers.dora-api-chat-dev.middlewares=dora-auth-dev"
      - "traefik.http.routers.dora-api-chat-dev.service=dora-api-dev"

  # Main Telegram bot for development
  telegram-bot-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dora-telegram-bot-dev
    env_file:
      - .env
    environment:
      - MEMORY_CACHE_ENABLED=true
      - MEMORY_CACHE_PATH=/app/cache/dora_memory_dev.db
      - MEMORY_CACHE_TTL_DAYS=7
      - MEMORY_CACHE_MAX_SIZE_MB=100
      - LOG_LEVEL=DEBUG  # More verbose logging for dev
      - ENABLE_TRACING=true
      - HTTP_HOST=http-server-dev
      - HTTP_PORT=8000
    volumes:
      - ./cache:/app/cache
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - dora-network-dev
    depends_on:
      - http-server-dev
    command: ["uv", "run", "python", "run_bot.py"]


networks:
  dora-network-dev:
    driver: bridge